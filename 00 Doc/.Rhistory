install.packages(c("dplyr", "extrafont", "ggplot2", "ggthemes", "gplots", "grid", "jsonlite", "lubridate", "RCurl", "reshape2", "tableplot", "tidyr"))
source('~/Desktop/CS 329E/myDataVisualization/.Rprofile')
source('~/Desktop/CS 329E/myDataVisualization/Database.R')
require("jsonlite")
require("RCurl")
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ",'oraclerest.cs.utexas.edu:5000/rest/native/?query="select * from `CFS` where ORIG_STATE = 50 limit 10"')),httpheader=c(DB='jdbc:data:world:sql:alex-luwenhui:s-17-edv-project-1', USER='kolinkodm', PASS='eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJhZ2VudDprb2xpbmtvZG06OjM4ODUyZWVlLWQ2YTktNDYxYi1iOGE4LWFmYzRkY2IwOGI4ZiIsImlhdCI6MTQ4NDcxNDYxOSwic3ViIjoicHJvZC11c2VyLWNsaWVudDprb2xpbmtvZG0iLCJyb2xlIjpbInVzZXJfYXBpX3dyaXRlIiwidXNlcl9hcGlfcmVhZCJdLCJnZW5lcmFsLXB1cnBvc2UiOnRydWV9.R1ZAFfhPIeEWA4MJ433JHJvhn4bGKOTZW0YpM2ZQediO4jAsuFF00-gbWa6My_WwjUtkD45m-MWuU30cIkHJtA', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = FALSE), ))
summary(df)
source('~/Desktop/CS 329E/myDataVisualization/.Rprofile')
dillon = c(2,5,7)
cannara = c(0,0,0)
dillon > cannara
source('~/Desktop/CS 329E/myDataVisualization/Database.R')
summary(df)
head(df)
source('~/Desktop/CS 329E/myDataVisualization/Database.R')
summary(df)
head(df)
source('~/Desktop/CS 329E/myDataVisualization/Database.R')
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ",'oraclerest.cs.utexas.edu:5000/rest/native/?query="select ORIG_STATE from CFS where ORIG_STATE = 50"')),httpheader=c(DB='jdbc:data:world:sql:kolinkodm:s-17-edv-project-1', USER='kolinkodm', PASS='eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJhZ2VudDprb2xpbmtvZG06OjM4ODUyZWVlLWQ2YTktNDYxYi1iOGE4LWFmYzRkY2IwOGI4ZiIsImlhdCI6MTQ4NDcxNDYxOSwic3ViIjoicHJvZC11c2VyLWNsaWVudDprb2xpbmtvZG0iLCJyb2xlIjpbInVzZXJfYXBpX3dyaXRlIiwidXNlcl9hcGlfcmVhZCJdLCJnZW5lcmFsLXB1cnBvc2UiOnRydWV9.R1ZAFfhPIeEWA4MJ433JHJvhn4bGKOTZW0YpM2ZQediO4jAsuFF00-gbWa6My_WwjUtkD45m-MWuU30cIkHJtA', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
summary(df)
head(df)
source('~/Desktop/CS 329E/myDataVisualization/Database.R')
data.frame(cannara, dillon)
df <= data.frame(cannara, dillon)
df
df
df <- data.frame(cannara, dillon)
df
df&mem
class(df$mem)
df&cannara
df$cannara
df = data.frame()
df1 = data.frame(dillon = c(12), cannara = c(3))
df1
df1 = data.frame(dillon = c(12), cannata = c(3))
df1
df2 = rbind(df, df1)
df2
df1 = data.frame(dillon = c(12), cannara = c(3))
df2 = rbind(df, df1)
df2
df
df = data.frame(dillon = c(13), cannara = c(5))
df1 = data.frame(dillon = c(1), cannara = c(3))
df2 = rbind(df, df1)
df2
df = data.frame(dillon = c(13), cannara = c(5))
df1 = data.frame(dillon = c(1), cannata = c(3))
df2 = rbind(df, df1)
source('~/Desktop/CS 329E/myDataVisualization/Database.R')
summary(df)
head(df)
source('~/Desktop/CS 329E/myDataVisualization/Database.R')
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ",'oraclerest.cs.utexas.edu:5000/rest/native/?query="select ORIG_STATE from CFS"')),httpheader=c(DB='jdbc:data:world:sql:kolinkodm:s-17-edv-project-1', USER='kolinkodm', PASS='eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJhZ2VudDprb2xpbmtvZG06OjM4ODUyZWVlLWQ2YTktNDYxYi1iOGE4LWFmYzRkY2IwOGI4ZiIsImlhdCI6MTQ4NDcxNDYxOSwic3ViIjoicHJvZC11c2VyLWNsaWVudDprb2xpbmtvZG0iLCJyb2xlIjpbInVzZXJfYXBpX3dyaXRlIiwidXNlcl9hcGlfcmVhZCJdLCJnZW5lcmFsLXB1cnBvc2UiOnRydWV9.R1ZAFfhPIeEWA4MJ433JHJvhn4bGKOTZW0YpM2ZQediO4jAsuFF00-gbWa6My_WwjUtkD45m-MWuU30cIkHJtA', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
summary(df)
head(df)
View(df1)
View(df1)
View(df2)
View(df)
source('~/Desktop/CS 329E/myDataVisualization/Database.R')
source('~/Desktop/CS 329E/myDataVisualization/Database.R')
source('~/Desktop/CS 329E/myDataVisualization/Database.R')
source('~/Desktop/CS 329E/myDataVisualization/Database.R')
source('~/Desktop/CS 329E/myDataVisualization/Database.R')
source('~/Desktop/CS 329E/myDataVisualization/Database.R')
install.packages("tibble")
install.packages("rmakdown")
install.packages("rmarkdown")
source('~/Desktop/CS 329E/myDataVisualization/Database.R')
source('~/Desktop/CS 329E/myDataVisualization/.Rprofile')
source('~/Desktop/CS 329E/myDataVisualization/.Rprofile')
source('~/Desktop/CS 329E/myDataVisualization/.Rprofile')
source('~/Desktop/CS 329E/myDataVisualization/.Rprofile')
source('~/Desktop/CS 329E/myDataVisualization/Database.R')
source('~/Desktop/CS 329E/myDataVisualization/Database.R')
source('~/Desktop/CS 329E/myDataVisualization/Database.R')
source('~/Desktop/CS 329E/myDataVisualization/Database.R')
source('~/Desktop/CS 329E/myDataVisualization/Database.R')
source('~/Desktop/CS 329E/myDataVisualization/Database.R')
source('~/Desktop/CS 329E/myDataVisualization/Database.R')
source('~/Desktop/CS 329E/myDataVisualization/Database.R')
source('~/Desktop/CS 329E/myDataVisualization/Database.R')
source('~/Desktop/CS 329E/myDataVisualization/Database.R')
source('~/Desktop/CS 329E/myDataVisualization/Database.R')
source('~/Desktop/CS 329E/myDataVisualization/Database.R')
source('~/Desktop/CS 329E/myDataVisualization/Database.R')
source('~/Desktop/CS 329E/myDataVisualization/Database.R')
source('~/Desktop/CS 329E/myDataVisualization/Database.R')
source('~/Desktop/CS 329E/myDataVisualization/Database.R')
source('~/Desktop/CS 329E/myDataVisualization/Database.R')
View(df)
View(df)
source('~/Desktop/CS 329E/myDataVisualization/Database.R')
View(df)
source('~/Desktop/CS 329E/myDataVisualization/Database.R')
View(df)
source('~/Desktop/CS 329E/myDataVisualization/Database.R')
source('~/Desktop/CS 329E/myDataVisualization/Database.R')
source('~/Desktop/CS 329E/myDataVisualization/Database.R')
source('~/Desktop/CS 329E/myDataVisualization/Database.R')
source('~/Desktop/CS 329E/myDataVisualization/Project 1/DatabasesREST.R')
source('~/Desktop/DataVisualization/.Rprofile')
df <- read.csv("/Users/danielkolinko/Desktop/CS 329E/Project 2/00 Doc/Chemical_Dependence_Treatment_Program.csv", stringsAsFactors = FALSE)
summary(df)
head(df)
View(df)
source('~/Desktop/CS 329E/Project 2/01 Data/AccessData.R')
source('~/Desktop/CS 329E/Project 2/01 Data/AccessData.R')
head(df)
source("../01 Data/AccessData.R")
source("../01 Data/AccessData.R")
sessionInfo(package=NULL)
source("../01 Data/AccessData.R")
source('~/Desktop/CS 329E/Project 2/01 Data/AccessData.R')
source("../01 Data/AccessData.R")
source('~/Desktop/CS 329E/Project 2/01 Data/AccessData.R')
source("../01 Data/AccessData.R")
source('~/Desktop/CS 329E/Project 2/01 Data/AccessData.R')
sessionInfo(package=NULL)
source("../01 Data/AccessData.R")
source('~/Desktop/CS 329E/Project 2/03 Visualization/Visual1.R')
source('~/Desktop/CS 329E/Project 2/03 Visualization/Visual1.R')
source('~/Desktop/CS 329E/Project 2/03 Visualization/Visual1.R')
source('~/Desktop/CS 329E/Project 2/03 Visualization/Visual1.R')
source('~/Desktop/CS 329E/Project 2/03 Visualization/Visual1.R')
source('~/Desktop/CS 329E/Project 2/03 Visualization/Visual1.R')
source('~/Desktop/CS 329E/Project 2/03 Visualization/Visual1.R')
df <- read.csv("/Users/danielkolinko/Desktop/CS 329E/Project 2/00 Doc/Chemical_Dependence_Treatment_Program.csv", stringsAsFactors = FALSE)
p = ggplot(df) + geom_boxplot(aes(x=County, y=Admissions, colour="Primary Substance Group")) +
theme(axis.text.x=element_text(angle=90, size=10, vjust=0.5))
print(p)
df <- read.csv("/Users/danielkolinko/Desktop/CS 329E/Project 2/00 Doc/Chemical_Dependence_Treatment_Program.csv", stringsAsFactors = FALSE)
p = ggplot(df) + geom_boxplot(aes(x=County, y=Admissions, colour=Substance)) +
theme(axis.text.x=element_text(angle=90, size=10, vjust=0.5))
print(p)
source("../03 Visualization/Visual1.R")
source('~/Desktop/CS 329E/Project 2/03 Visualization/Visual1.R')
source("../03 Visualization/Visual1.R")
source("../03 Visualization/Visual1.R")
source("../03 Visualization/Visual1.R")
source('~/Desktop/CS 329E/Project 2/01 Data/AccessData.R')
source('~/Desktop/CS 329E/Project 2/01 Data/AccessData.R')
source("../03 Visualization/Visual1.R")
source('~/Desktop/CS 329E/Project 2/03 Visualization/Visual1.R')
sessionInfo(package=NULL)
source("../03 Visualization/Visual1.R")
=
=
x=c(1,2,3,4,5); y=x*2; z=x^3; df = data.frame(x,y,z)
plot = tidyr::gather(df, variable, value, -x) %>% ggplot() + geom_point(aes(x=x, y=value, colour = variable, size=4)) + geom_line(aes(x=x, y=value, colour = variable))
print(plot)
source("../03 Visualization/Visual1.R")
source('~/Desktop/CS/DataVisualization/03 Tableau/Week 5 - R of Tableau Boxplots and Histograms.R')
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ",'localhost:5011/rest/native/?query="select * from SuperStoreOrders"')),httpheader=c(DB='jdbc:data:world:sql:cannata:superstoreorders', USER='cannata', PASS=redacted, MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE) ))
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("jsonlite", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
source('~/Desktop/CS/DataVisualization/03 Tableau/Week 5 - R of Tableau Boxplots and Histograms.R')
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
source('~/Desktop/CS/DataVisualization/03 Tableau/Week 5 - R of Tableau Boxplots and Histograms.R')
library("assertthat", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("backports", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
detach("package:assertthat", unload=TRUE)
detach("package:backports", unload=TRUE)
df <- read.csv("/Users/danielkolinko/Downloads/SuperStoreOrders.csv", stringsAsFactors = FALSE)
source('~/Desktop/CS/DataVisualization/03 Tableau/Week 5 - R of Tableau Boxplots and Histograms.R')
df <- read.csv("/Users/danielkolinko/Downloads/SuperStoreOrders.csv", stringsAsFactors = FALSE)
df <- read.csv("/Users/danielkolinko/Downloads/SuperStoreOrders.csv", stringsAsFactors = FALSE)
df <- read.csv("/Users/danielkolinko/Downloads/SuperStoreOrders.csv", stringsAsFactors = FALSE)
require("ggplot2")
source('~/Desktop/CS/DataVisualization/03 Tableau/Week 5 - R of Tableau Boxplots and Histograms.R')
p = dplyr::filter(df, Region == "International" | Region == "East") %>% ggplot(.) + geom_boxplot(aes(x=Category, y=Sales, colour=Region)) +
theme(axis.text.x=element_text(angle=90, size=10, vjust=0.5))
print(p)
p = dplyr::filter(df, Region == "International" | Region == "East") %>% ggplot(.) + geom_histogram(aes(x=Shipping_Cost)) +
theme(axis.text.x=element_text(angle=90, size=10, vjust=0.5))
print(p)
p = dplyr::filter(df, Region == "International" | Region == "East") %>% ggplot(.) + geom_boxplot(aes(x=Category, y=Sales, colour=Region)) +
theme(axis.text.x=element_text(angle=90, size=10, vjust=0.5))
print(p)
source('~/Desktop/CS/.Rprofile.R')
source('~/Desktop/CS/.Rprofile')
require("ggplot2")
require("ggthemes")
source('~/Desktop/CS/.Rprofile')
source('~/Desktop/CS/.Rprofile')
source('~/Desktop/CS/.Rprofile')
source('~/Desktop/CS/.Rprofile')
source('~/Desktop/CS/.Rprofile')
source('~/Desktop/CS/.Rprofile')
require("gplots")
require("grid")
require("RCurl")
require("reshape2")
require("tableplot")
require("tidyr")
require("dplyr")
require("jsonlite")
require("extrafont")
require("lubridate")
p = dplyr::filter(df, Region == "International" | Region == "East") %>% ggplot(.) + geom_histogram(aes(x=Shipping_Cost)) +
theme(axis.text.x=element_text(angle=90, size=10, vjust=0.5))
print(p)
p = dplyr::filter(df, Region == "International" | Region == "East") %>% ggplot(.) + geom_boxplot(aes(x=Category, y=Sales, colour=Region)) +
theme(axis.text.x=element_text(angle=90, size=10, vjust=0.5))
print(p)
p = dplyr::filter(df, Region == "International" | Region == "East") %>% ggplot(.) + geom_histogram(aes(x=Region)) +
theme(axis.text.x=element_text(angle=90, size=10, vjust=0.5))
print(p)
p = ggplot(df) + geom_histogram(aes(x=Shipping_Cost)) +
theme(axis.text.x=element_text(angle=90, size=10, vjust=0.5))
print(p)
require(readr)
# Set the Working Directory to the 00 Doc folder
# Download the cannata/diamonds file into a folder ../../CSVs and rename the file PreETL_Diamonds.csv
#../../ means two folders up from working directory
file_path = "../../CSVs/PreETL_Diamonds.csv"
diamonds <- readr::read_csv(file_path)
names(diamonds)
df <- rename(diamonds, tbl = table) # table is a reserved word in Oracle so rename it to tbl.
df <- diamonds
names(df)
str(df)
lapply('alphabet begins with abc', gsub, pattern="[abc]",replacement= "")
lapply('alphabet begins with abc', gsub, pattern="xyz",replacement= "") #
lapply('alphabet begins with abc', gsub, pattern="[^abc]",replacement= "")
lapply('alphabet begins with abc', gsub, pattern="^[abc]",replacement= "") #
lapply('alphabet begins with --- abc', gsub, pattern="[a-e]",replacement= "") #a through e
lapply('alphabet begins with --- abc', gsub, pattern="[ae-]",replacement= "") #a, e & dash (-)
lapply('alphabet begins with \\\ abc', gsub, pattern="[ae\\]",replacement= "") #
lapply('alphabet begins with [] abc', gsub, pattern="[ae[]",replacement= "")
lapply('alphabet begins with [e] abc', gsub, pattern="[ae]]",replacement= "")
lapply('alphabet begins with [] abc', gsub, pattern="[ae[]",replacement= "")
lapply('alphabet begins with [] abc', gsub, pattern="[ae]]",replacement= "") #all a, e & ]
lapply('alphabet begins with [] abc', gsub, pattern="[ae]]",replacement= "") #all a, e & ]
lapply('alphabet begins with [] abc', gsub, pattern="[ae]]",replacement= "") #all a, e & ]
p = dplyr::filter(df, Region = "International" | Region = "East") %>% ggplot(.) + geom_boxplot(aes(x=Category, y=Sales, colour=Region))
print(p)
p = dplyr::filter(df, Region = "International" | Region = "East") %>% ggplot(.) + geom_boxplot(aes(x=Category, y=Sales, colour=Region)) + theme(axis.text.x=element_text(angle=50, size = 10, vjust = .5))
print(p)
p = dplyr::filter(df, Region == "International" | Region == "East") %>% ggplot(.) + geom_boxplot(aes(x=Category, y=Sales, colour=Region)) + theme(axis.text.x=element_text(angle=50, size = 10, vjust = .5))
print(p)
p = dplyr::filter(df, Region == "International" | Region == "East") %>% ggplot(.) + geom_boxplot(aes(x=Category, y=Sales, colour=Region)) +
theme(axis.text.x=element_text(angle=90, size=10, vjust=0.5))
print(p)
p = dplyr::filter(df, Region == "International" | Region == "East") %>% ggplot(.) + geom_hisogram(aes(x=Category)) + theme(axis.text.x=element_text(angle=50, size = 10, vjust = .5))
print(p)
p = dplyr::filter(df, Region == "International" | Region == "East") %>% ggplot(.) + geom_histogram(aes(x=Category)) + theme(axis.text.x=element_text(angle=50, size = 10, vjust = .5))
print(p)
p = dplyr::filter(df, Region == "International" | Region == "East") %>% ggplot(.) + geom_boxplot(aes(x=Category, y=Sales, colour=region)) + theme(axis.text.x=element_text(angle=50, size = 10, vjust = .5))
print(p)
p = dplyr::filter(df, Region == "International" | Region == "East") %>% ggplot(.) + geom_boxplot(aes(x=Category, y=Sales, colour=region)) +
theme(axis.text.x=element_text(angle=90, size = 10, vjust = .5))
print(p)
p = dplyr::filter(df, Region == "International" | Region == "East") %>% ggplot(.) + geom_boxplot(aes(x=Category, y=Sales, colour=Region)) +
theme(axis.text.x=element_text(angle=90, size=10, vjust=0.5))
print(p)
df <- read.csv("/Users/danielkolinko/Downloads/SuperStoreOrders.csv", stringsAsFactors = FALSE)
p = dplyr::filter(df, Region == "International" | Region == "East") %>% ggplot(.) + geom_boxplot(aes(x=Category, y=Sales, colour=Region)) +
theme(axis.text.x=element_text(angle=90, size=10, vjust=0.5))
print(p)
p = dplyr::filter(df, Region == "International" | Region == "East") %>% ggplot(.) + geom_boxplot(aes(x=Category, y=Sales, colour=region)) +
theme(axis.text.x=element_text(angle=90, size = 10, vjust = .5))
print(p)
p = dplyr::filter(df, Region == "International" | Region == "East") %>% ggplot(.) + geom_boxplot(aes(x=Category, y=Sales, colour=Region)) +
theme(axis.text.x=element_text(angle=90, size=10, vjust = .5))
print(p)
p = dplyr::filter(df, Region="International" | Region="East") %>% ggplot(.) + geom_boxplot(aes(x=Category, y=Sales, colour=Region)) +
theme(axis.text.position=element_text(angle=90, size=10, vjust=.5))
print(p)
p = dplyr::filter(df, Region="International" | Region="East") %>% ggplot(.) + geom_boxplot(aes(x=Category, y=Sales, colour=Region)) +
theme(axis.text.x=element_text(angle=90, size=10, vjust=.5))
print(p)
source('~/Desktop/CS/.Rprofile')
dplyr::select(diamonds, cut, clarity) %>% tbl_df # Equivalent SQL: select cut, clarity from diamonds;
diamonds %>% dplyr::select(cut, clarity) %>% tbl_df
diamonds %>% dplyr::select(., cut, clarity) %>% tbl_df
name(diamonds)
names(diamonds)
diamonds %>% dplyr::select(color:price) %>% tbl_df # all columns btwn colour & price
diamonds %>% dplyr::select(-cut, -clarity) %>% tbl_df # all columns except cut & clarity
x <- diamonds %>% dplyr::select(cut, clarity) %>% tbl_df #
x
diamonds %>% dplyr::select(cut, clarity) %>% dplyr::filter(cut == "Good") %>% tbl_df # Equivalent SQL: select cut, clarity from diamonds where cut = 'Good';
diamonds %>% dplyr::select(cut, clarity) %>% dplyr::filter(cut %in% c("Good", "Fair")) %>% tbl_df # Equivalent SQL: select cut, clarity from diamonds where cut in ('Good', 'Fair');# or Equivalent SQL:  select cut, clarity from diamonds where cut = 'Good' or cut = 'Fair'; where cut
diamonds %>% dplyr::select(cut, clarity) %>% dplyr::filter(cut %in% c("Good", "Fair"), clarity == "VS1") %>% tbl_df # Equivalent SQL:  select cut, clarity from diamonds where (cut = 'Good' or cut = 'Fair') and clarity = 'VS1';
diamonds %>% dplyr::select(cut, clarity) %>% dplyr::filter(cut %in% c("Good", "Fair"), clarity == "VS1" | is.na(cut)) %>% tbl_df # Equivalent SQL:  select cut, clarity from diamonds where ((cut = 'Good' or cut = 'Fair') and clarity = 'VS1') or cut is null;
diamonds %>% dplyr::select(cut, clarity, x, y, z) %>% dplyr::filter(cut %in% c("Good", "Fair"), clarity == "VS1" | is.na(cut)) %>% dplyr::mutate(sum = x+y+z) %>% tbl_df # Equivalent: select cut, clarity, x, y, z, x+y+z as sum from diamonds where ((cut = 'Good' or cut = 'Fair') and clarity = 'VS1') or cut is null
shiny::runApp('Desktop/CS/Projects/Project 4/02 Shiny')
source('~/Desktop/CS/.Rprofile')
source("../01 Data/R_ETL.drugs.R")
sessionInfo()
source("../01 Data/R_ETL.drugs.R")
sessionInfo()
source("../01 Data/R_ETL.drugs.R")
shiny::runApp('Desktop/CS/DataVisualization/09 Crosstabs')
runApp('Desktop/CS/DataVisualization/09 Crosstabs')
runApp('Desktop/CS/DataVisualization/09 Crosstabs')
runApp('Desktop/CS/DataVisualization/09 Crosstabs')
runApp('Desktop/CS/DataVisualization/09 Crosstabs')
runApp('Desktop/CS/DataVisualization/09 Crosstabs')
runApp('Desktop/CS/DataVisualization/09 Crosstabs')
runApp('Desktop/CS/DataVisualization/09 Crosstabs')
runApp('Desktop/CS/DataVisualization/09 Crosstabs')
runApp('Desktop/CS/DataVisualization/09 Crosstabs')
shiny::runApp('Desktop/CS/DataVisualization/09TableauExamples')
shiny::runApp('Desktop/CS/DataVisualization/09TableauExamples')
runApp('Desktop/CS/DataVisualization/09TableauExamples')
install(DT)
install.packages("DT")
runApp('Desktop/CS/DataVisualization/09TableauExamples')
runApp('Desktop/CS/DataVisualization/09TableauExamples')
runApp('Desktop/CS/DataVisualization/09TableauExamples')
runApp('Desktop/CS/DataVisualization/09TableauExamples')
runApp('Desktop/CS/DataVisualization/09TableauExamples')
runApp('Desktop/CS/DataVisualization/09TableauExamples')
runApp('Desktop/CS/DataVisualization/09TableauExamples')
runApp('Desktop/CS/DataVisualization/09TableauExamples')
runApp('Desktop/CS/DataVisualization/09TableauExamples')
runApp('Desktop/CS/DataVisualization/09TableauExamples')
runApp('Desktop/CS/DataVisualization/09TableauExamples')
sessionInfo()
source("../01 Data/R_ETL.hospital.R")
shiny::runApp('Desktop/CS/DataVisualization/09TableauExamples')
install.packages("plotly")
runApp('Desktop/CS/DataVisualization/09TableauExamples')
shiny::runApp('Desktop/CS/DataVisualization/09TableauExamples')
shiny::runApp('Desktop/CS/Projects/Project6/02 Shiny/Shiny_V1_Liberal_States')
runApp('Desktop/CS/Projects/Project6/02 Shiny/Shiny_V1_Liberal_States')
runApp('Desktop/CS/Projects/Project6/02 Shiny/Shiny_V1_Liberal_States')
runApp('Desktop/CS/Projects/Project6/02 Shiny/Shiny_V1_Liberal_States')
shiny::runApp('Desktop/CS/Projects/Project6/02 Shiny/Shiny_V1_Conservative_and_Liberal_States')
sessionInfo()
source('~/Desktop/CS/.Rprofile')
source('~/Desktop/CS/.Rprofile')
source('~/Desktop/CS/.Rprofile')
setwd("~/Desktop/CS/Projects/Final/00 Doc")
